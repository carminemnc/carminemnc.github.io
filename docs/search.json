[
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Some of my notable projects/applications/studies",
    "section": "",
    "text": "Tripscraper\n\n\nAn open source application for NLP playground\n\n\n\n\n\n\nJul 10, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBook your space\n\n\nAn open source application for managing office desk booking\n\n\n\n\n\n\nNov 23, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/book-your-space/index.html",
    "href": "projects/book-your-space/index.html",
    "title": "Book your space",
    "section": "",
    "text": "demo  source code\n\n\nMotivation\nWe made this application in order to manage people at office with the new rules for after Covid. This application has been made in 1 day and has to full fill quickly the need to manage easily time presence and booking for our Office.\nThis application is not designed to manage the full Office it is designed to have 1 version per team, floor, service etc… For example we use one instance for our Paris Office and one for our Lyon Office.\nWith Office Desk Booking you can manageteam presence by assigning days to some teams and if there is remaining free place, each user can book a place."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Welcome here,\nI’m a Statistician with a degree in actuarial science. My final dissertation was on “Statistical methods for pair-trading strategies: a state-space models approach”.  I’m passionate about unconvering hidden patterns and extracting actionable insights from complex data.   Ad Hoc RPA Analyst, passionate about processes optimization.   Check out some of my projects."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "On Bayesian optimization\n\n\n\n\n\n\n\npython\n\n\n\n\nOn ML hyperparameters fine-tuning trough Bayesian optimization: a study\n\n\n\n\n\n\nOct 25, 2023\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/tripscraper/index.html",
    "href": "projects/tripscraper/index.html",
    "title": "Tripscraper",
    "section": "",
    "text": "source code\n\n\nMotivation\nThe application uses a variety of NLP techniques, including sentiment analysis, word frequency analysis, word trends over time and aspect based sentiment analysis.\nThe Playground section of TripScraper is a sandbox where users can experiment with the NLP models that are used by the tool. This section allows users to try out different features of the models, to see how they work, and to learn more about how NLP can be used to analyze TripAdvisor reviews.\n\n\nBigrams network graph\n\n\nCode\nimport pandas as pd\nimport networkx as nx\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interact\nimport ipywidgets as widgets \n\ndef words_network_graph(dataset,\n                        tuple,\n                        raw,\n                        frequency):\n    \n    data = pd.read_csv(dataset)\n    \n    def tupler(w):\n1        return (w.split(' ')[0],w.split(' ')[1])\n    \n    data[tuple] = data[raw].apply(lambda x: tupler(x))\n    \n    data = data[data['frequency']&gt;=frequency]\n\n    # create dictionary with counts\n    d = data.set_index(tuple).T.to_dict('records')\n\n    # network graph\n    G = nx.Graph()\n\n    # edge connections\n    for k, v in d[0].items():\n        G.add_edge(k[0], k[1], weight=(v*30))\n\n    fig, ax = plt.subplots(figsize=(10, 8))\n    fig.set_figheight(5)\n    fig.set_figwidth(10)\n\n    pos = nx.spring_layout(G, k=2)\n\n    # weights\n    weights = nx.get_edge_attributes(G, 'weight').values()\n    weights = list(weights)\n    weights = [w*0.0060 for w in weights]\n\n    # plot networks\n    nx.draw_networkx(G, pos,\n                     font_size=12,\n                     width=list(weights),\n                     edge_color='white',\n                     node_color='#008b8b',\n                     with_labels=False,\n                     ax=ax,\n                     node_size=50)\n\n    # offset labels\n    for key, value in pos.items():\n        x, y = value[0]+.00135, value[1]+.045\n        ax.text(x, y,\n                s=key,\n                bbox=dict(facecolor='white', alpha=0.60),\n                horizontalalignment='center', fontsize=9)\n    fig.set_facecolor('#181616')\n    \n    plt.axis('off')\n\n\n\n1\n\nDefining a tupler function for handling csv read file\n\n\n\n\nPlotting a graph of this\n\n\nCode\nwords_network_graph('reviews_bigrams.csv',\n                    'bigram',\n                    'bigrams',\n                    10)\n\n\n\n\n\nFigure 1: Plot"
  }
]